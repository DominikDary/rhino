#!/bin/bash

#
#
# ADOBE CONFIDENTIAL
# ___________________
#
#  Copyright 2018 Adobe Systems Incorporated
#  All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Adobe Systems Incorporated and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Adobe Systems Incorporated and its
# suppliers and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Adobe Systems Incorporated.

#
# rhino: loadtesting CLI tool installer.
# -
# version   1.0
# author    Erhan Bagdemir <bagdemir@adobe.com>

declare -r RHINO_HOME="${HOME}/.rhino"

. ./helper

clone_rhino()
{
  RHINO_SCRIPTPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"
  [ -d "${RHINO_HOME}/cache" ] && rm -fR ${RHINO_HOME}/cache
  ln -s ${RHINO_SCRIPTPATH} ${RHINO_HOME}/cache
}

build_image()
{
  p_ln "Building project..."
  local d_res=`cd ${RHINO_HOME}/cache/rhino-cli && docker build ${RHINO_HOME}/cache/rhino-cli -t rhino:latest`
  if [[ $? == 0 ]] && [[ $d_res =~ .*Successfully\ built.* ]]; then
    p_status "DONE" "Result builder container built."
  else
    p_err "$d_res"
  fi
}

prepare_key() {
  echo "Path to the PEM file of the Rhino Cluster (The SSH connection is required for clean-up and reporting):"
  read path_to_key
  path_to_key="${path_to_key/\~/$HOME}"
  if [ -f "${path_to_key}" ]; then
    cp "${path_to_key}" ${RHINO_HOME}/cache/rhino-cli/
  else
    echo "The key file $path_to_key not found."
    exit -1
  fi
}

configure_rhino()
{
  p_ln "Configuring the rhino... Please wait."
  [ ! -d "${RHINO_HOME}/bin" ] && mkdir ${RHINO_HOME}/bin
  ln -s ${RHINO_HOME}/cache/rhino-cli/rhino ${RHINO_HOME}/bin/
  chmod u+x ${RHINO_HOME}/bin/rhino

  read -p 'Add ~/.rhino/bin to shell rc?(y/n)' ok
  if [[ "${ok}" == "y" ]]; then
    if [[ ${SHELL} =~ "bash" ]]; then
      shellrc="${HOME}/.bashrc"
    elif [[ ${SHELL} =~ "zsh" ]]; then
      shellrc="${HOME}/.zshrc"
    fi
    shellrc_e=`cat ${shellrc} | grep ".rhino/bin"`
    if [ -z "$shellrc_e" ]; then
      echo "export PATH=\$PATH:${RHINO_HOME}/bin" >> ${shellrc}
    fi
    echo "Added ${RHINO_HOME}/bin/rhino into ${shellrc}."
  fi

  p_status "DONE" "Configuration completed."
  echo ""
  echo "Installation completed."
}

install()
{
  rm -rf ${RHINO_HOME} 2> /dev/null
  if [ ! -d "${RHINO_HOME}" ]; then
    mkdir ${RHINO_HOME}
    touch ${RHINO_HOME}/env
  fi

  clone_rhino
  prepare_key
  build_image
  configure_rhino
}

install
